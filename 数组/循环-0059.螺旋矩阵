# 
** 力扣题目链接：https://leetcode-cn.com/problems/spiral-matrix-ii/
给定正整数n，生成一个包含1到n^2的所有元素，元素按顺时针顺序螺旋排列的正方形矩阵

示例:
输入: 3 输出: [ [ 1, 2, 3 ], [ 8, 9, 4 ], [ 7, 6, 5 ] ]


******************思路
循环不变量原则，模拟顺时针画矩阵的过程:填充上行从左到右，填充右列从上到下，填充下行从右到左，填充左列从下到上，由外向内一圈一圈画下去。
由于边界条件特别多，所以要固定规则来遍历。每一圈要画四条边，每一条边都遵循  左闭右开 （即拐角处让给新的一边继续画）  或者  左开右闭   的原则


******************作者代码
class Solution:
    def generateMatrix(self, n: int)-> List[List[int]:
        
        # 初始化要填充的正方形
        matrix = [[0] * n for _ in range(n)]
        left, right, up, down = 0, n-1, 0, n-1
        number = 1
        
        while left < right and up < down:
            # 从左边填充到右边
            for x in range(left, right):
                matrix[up][x] = number
                number += 1
            
            # 从上边填充到下边
            for y in range(up, down):
                matrix[y][right] = number
                number += 1
            
            # 从右到左填充下边
            for x in range(right, left, -1):
                matrix[down][x] = number
                number += 1
            
            for y in range(down, up, -1):
                matrix[y][left] = number
                number += 1
            
            left += 1
            right -= 1
            up += 1
            down -= 1
            
        # 如果阶数为奇数，额外填充一次中心
        if n % 2 :
            matrix[n//2][n//2] = number

        return matrix
        
*******************我的代码
class Solution:
    def generateMatrix(self, n: int) -> List[List[int]]:
        matrix = [[0]*n for _ in range(n)]
        left, right, up, down = 0, n-1, 0, n-1
        number = 1   # 起始数字

        while left<right and up<down:
            for x in range(left, right):
                matrix[up][x] = number
                number +=1

            for y in range(up, down):
                matrix[y][right] = number
                number+=1

            for x in range(right, left, -1):
                matrix[down][x]=number
                number+=1

            for y in range(down, up, -1):
                matrix[y][left]=number
                number+=1
            left+=1
            right-=1
            up+=1
            down-=1
            
       # 最中心的数在执行完循环之后再去判断     
        if n%2:
            matrix[n//2][n//2]=number
        return matrix
            
            
    
